@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.HomePage>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "_Layout.cshtml";

    IEnumerable<IPublishedContent> latestBlogPosts = Model.Content.Descendant("blog").Children.OrderBy(x => x.GetPropertyValue<DateTime>("date")).Take(2);

    IEnumerable<IPublishedContent> latestProjects = Model.Content.Descendant("projects").Children.OrderByDescending(x => x.CreateDate).Take(2);

    IPublishedContent settingsNode = Umbraco.TypedContentAtRoot().DescendantsOrSelf("settings").FirstOrDefault();
}

<section class="landing-section">
    <div class="col-full">
        <h1 id="site-title">@settingsNode.GetPropertyValue("siteTitle")</h1>
        <div class="intro">@Html.Raw(Model.Content.Intro)</div>
    </div>
</section>

<section class="landing-section">
    @if (latestProjects != null && latestProjects.Any())
    {
        <h2 class="section-title">Projects</h2>

        foreach (var project in latestProjects)
        {
            IPublishedContent image = project.GetPropertyValue<IEnumerable<IPublishedContent>>("bannerImage").FirstOrDefault();

            <div class="col">
                <div class="card project-card">
                    @if (image != null)
                    {
                        
                        <img src="@image.GetCropUrl(840,685)" alt="">
                    }
                    <div class="after" style="background: @project.GetPropertyValue("highlightColor");">

                        <h3 class="project-card-title">@project.GetPropertyValue("mainTitle")</h3>
                    </div>
                </div>
            </div>
        }
    }
    
    <a href="@Model.Content.Descendant("projects").Url" class="more-button">All projects</a>
</section>

<section class="landing-section">
        
        
        @if (latestBlogPosts != null && latestBlogPosts.Any())
        {

            <h2 class="section-title">Latest blogs</h2>

            foreach (var blogPost in latestBlogPosts)
            {
                IPublishedContent image = blogPost.GetPropertyValue<IEnumerable<IPublishedContent>>("bannerImage").FirstOrDefault();
                

                <div class="col">
                    <div class="card blog-post-card">
                        <div class="blog-post-card-header">
                            @if (image != null)
                            {

                                <img src="@image.GetCropUrl(840,525)" alt="">
                            }
                        </div>
                        <div class="blog-post-card-content">
                            <div class="blog-post-metadata">
                                <span class="blog-post-category">Web Development</span>
                                @if (blogPost.HasValue("date"))
                                {
                                    DateTime date = blogPost.GetPropertyValue<DateTime>("date");

                                    <time class="blog-post-date" datetime="@date.ToString("dd-MM-yyyy")">@date.ToString("dd MMMM yyyy")</time>

                                }
                            </div>

                            <a href="@blogPost.Url">
                                <h3 class="blog-post-title">@blogPost.GetPropertyValue("mainTitle")</h3>
                            </a>
                            <p class="blog-post-preview">
                                @blogPost.GetPropertyValue("preview")
                            </p>
                        </div>
                    </div>
                </div>
            }
        }

        <a href="@Model.Content.Descendant("blog").Url" class="more-button">Read all</a>
    </section>